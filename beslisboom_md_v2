<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Beslisboom Template</title>
    <style>
        body {
            font-family: 'Open Sans', Arial, sans-serif;
            line-height: 1.6;
            color: #333333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        
        h1, h2 {
            color: #009900;
            font-weight: 700;
        }
        
        h1 {
            border-bottom: 2px solid #009900;
            padding-bottom: 10px;
        }
        
        .question {
            background-color: #f0f8f0;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
        }
        
        .options {
            margin: 15px 0;
        }
        
        .option {
            display: block;
            margin: 10px 0;
            padding: 10px 15px;
            background-color: #009900;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        
        .option:hover {
            background-color: #007700;
        }
        
        .result {
            background-color: #e0f0e0;
            padding: 20px;
            border-radius: 5px;
            margin: 20px 0;
        }
        
        .back-button {
            display: inline-block;
            margin-top: 15px;
            padding: 8px 15px;
            background-color: #666666;
            color: white;
            text-decoration: none;
            border-radius: 4px;
        }
        
        .back-button:hover {
            background-color: #555555;
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <h1>Beslisboom</h1>
    
    <div id="question-container">
        <!-- Questions will be inserted here by JavaScript -->
    </div>

    <script>
        // Question tree structure
        const questions = {
            q1: {
                text: "Wat is je eerste vraag?",
                options: [
                    { text: "Optie 1", next: "q2" },
                    { text: "Optie 2", next: "q3" }
                ]
            },
            q2: {
                text: "Vraag na optie 1?",
                options: [
                    { text: "Optie A", next: "result1" },
                    { text: "Optie B", next: "result2" }
                ]
            },
            q3: {
                text: "Vraag na optie 2?",
                options: [
                    { text: "Optie X", next: "result3" },
                    { text: "Optie Y", next: "result4" }
                ]
            },
            result1: {
                text: "Dit is het resultaat voor pad 1 → A",
                isResult: true
            },
            result2: {
                text: "Dit is het resultaat voor pad 1 → B",
                isResult: true
            },
            result3: {
                text: "Dit is het resultaat voor pad 2 → X",
                isResult: true
            },
            result4: {
                text: "Dit is het resultaat voor pad 2 → Y",
                isResult: true
            }
        };

        // Track the current question and history
        let currentQuestion = 'q1';
        let history = [];

        // Function to display a question or result
        function displayQuestion(id) {
            const container = document.getElementById('question-container');
            const item = questions[id];
            
            if (item.isResult) {
                // Display result
                container.innerHTML = `
                    <div class="result">
                        <h2>Resultaat</h2>
                        <p>${item.text}</p>
                        <a href="#" class="back-button" onclick="goBack()">Terug</a>
                    </div>
                `;
            } else {
                // Display question
                let optionsHtml = item.options.map(option => 
                    `<a href="#" class="option" onclick="nextQuestion('${option.next}')">${option.text}</a>`
                ).join('');
                
                container.innerHTML = `
                    <div class="question">
                        <h2>Vraag</h2>
                        <p>${item.text}</p>
                        <div class="options">${optionsHtml}</div>
                    </div>
                `;
            }
        }

        // Function to go to the next question
        function nextQuestion(id) {
            history.push(currentQuestion);
            currentQuestion = id;
            displayQuestion(id);
        }

        // Function to go back to the previous question
        function goBack() {
            if (history.length > 0) {
                currentQuestion = history.pop();
                displayQuestion(currentQuestion);
            }
        }

        // Initialize with the first question
        displayQuestion(currentQuestion);
    </script>
</body>
</html>
